# Mobius Environment Variables for Dev Hosts
# shellcheck shell=bash

# Core M3D Configuration
export M3D_APP_DIR="${HOME}/Mobius3D/projects/mobius3d"
export M3D_VENV="${M3D_APP_DIR}/venv/m3d"

# Automatically load venv
activate_m3d () {
  if [ "$(command -v deactivate)" == "deactivate" ]; then
    deactivate
  fi
  source "${M3D_VENV}/bin/activate"
}

# Server settings
export CDB_URL_PREFIX="${USER}_dev"
DEPLOY_HOST=$(hostname -s)
export DEPLOY_HOST
export DEPLOY_PORT=$((20000 + M3D_USER_NUMBER*1000 + 80))
export CHROME_BINARY=/usr/bin/chromium-browser

if [[ $DEPLOY_HOST =~ .*-3v-.* ]]; then
  export PYCHARM_DEBUG_PORT=$(( DEPLOY_PORT + 5 + ${DEPLOY_HOST:-1} + 1 ))
else
  export PYCHARM_DEBUG_PORT=$(( DEPLOY_PORT + 5 + ${DEPLOY_HOST:-1} - 1 ))
fi
export CHROME_BINARY=/usr/bin/chromium-browser

# Add custom aliases to make life easier
alias m3d_webapp='cd "${M3D_APP_DIR}"; "${M3D_VENV}/bin/python" ${M3D_APP_DIR}/src/mms/webapp/app.wsgi --threaded'
alias kill_m3d_webapp='pkill -f ${M3D_APP_DIR}/src/mms/webapp/app.wsgi'
alias m3d_worker='cd ${M3D_APP_DIR}; activate_m3d; mms_worker_parent --testing'
alias customertest='cd ${M3D_APP_DIR}; "${M3D_VENV}/bin/python" ${M3D_APP_DIR}/mms/testing/customer.py'


# mms_dosecalc compilation configuration
alias cmake='/usr/local/cmake-3.10/bin/cmake'
source /opt/intel/composerxe/bin/compilervars.sh intel64
export PATH=$PATH:/usr/local/cuda/bin
export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${VIRTUAL_ENV}/lib:/usr/local/cuda/lib64


# nosetests alias
alias nosetest='nosetests -s --nologcapture --ipdb --ipdb-failure'

# List dev settings/information
print-m3d-dev-info () {
  echo "Web server port = $DEPLOY_PORT"
  echo "Web server = ${DEPLOY_HOST}:${DEPLOY_PORT}/"
  echo "Debug port = ${PYCHARM_DEBUG_PORT}"
  echo "CouchDB Port = 5984"
  echo "CouchDB utilities = ${DEPLOY_HOST}:5984/_utils/"
  echo "DICOM server = $(( 20000 + M3D_USER_NUMBER*1000 + 113 ))"
  echo "Test-side web server = $(( 40000 + M3D_USER_NUMBER*1000 + 80 ))"
  echo "Test-side DICOM server = $(( 40000 + M3D_USER_NUMBER*1000 + 113 ))"
  echo ""
  echo "PyCharm Remote Debugger:"
  echo "import pydevd; pydevd.settrace('localhost', port=${PYCHARM_DEBUG_PORT}, stdoutToServer=True, stderrToServer=True)"
}


m3d-tmux-loops () {
  case "$1" in
    start | up)
      m3d-tmux-loops-start "$@"
      ;;
    stop | cancel)
      m3d-tmux-loops-stop "$@"
      ;;
    kill)
      m3d-tmux-loops-kill "$@"
      ;;
    *)
      echo "Unknown argument $1, must be either start/up, stop/cancel or kill"
      exit 1
      ;;
  esac
}

m3d-tmux-loops-start () {
# Spawn a dev setup with 6 tmux panes all running the different Mobius3D loops

  # Start tmux server if not yet running
  tmux start-server
  m3d-tmux-loops-kill

  # Split and tile the necessary windows (#6)
  tmux new-session -d -s loops
  tmux split-window -v -t loops:0.0
  tmux split-window -v -t loops:0.1
  tmux split-window -h -t loops:0.0
  tmux split-window -h -t loops:0.1
  tmux split-window -h -t loops:0.2
  tmux select-layout -t loops:0 tiled

  for pane in {0..5}; do
    tmux send-keys -t loops:0."${pane}" "cd ${M3D_APP_DIR}" Enter
  done

  tmux send-keys -t loops:0.0 'm3d_request_loop' Enter
  tmux send-keys -t loops:0.1 'mcb_request_loop' Enter
  tmux send-keys -t loops:0.2 'mfx_request_loop' Enter
  tmux send-keys -t loops:0.3 'mms_maintenance_loop' Enter
  tmux send-keys -t loops:0.4 'mms_worker_loop' Enter
  tmux send-keys -t loops:0.5 'm3d_webapp' Enter
}


m3d-tmux-loops-stop () {
# Stop the running tmux loops without killing the session
  if [[ $# -gt 0 ]]; then
    local panes=("$@")
  else
    local panes=({0..5})
  fi

  for pane in "${panes[@]}"; do
    # A single C-c is sometimes not enough, since some Interrupts are not correctly caught
    for _ in {0..4}; do
      tmux send-keys -t loops:0."${pane}" C-c C-c C-c Enter
      sleep 0.1s
    done
  done
}


m3d-tmux-loops-kill () {
# Kill the tmux session 'loops' session if it exists
  if tmux has-session -t loops 2>/dev/null ; then
    tmux kill-session -t loops
  fi
}
